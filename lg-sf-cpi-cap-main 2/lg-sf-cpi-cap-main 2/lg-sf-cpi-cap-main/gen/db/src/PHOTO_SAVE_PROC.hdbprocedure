PROCEDURE PHOTO_SAVE_PROC (
    IN  I_TABLE TABLE(PHOTOID NVARCHAR(128),
                     USERID NVARCHAR(128),
                     PHOTOTYPE NVARCHAR(128),
                     CUDKEY NVARCHAR(1),
                     RECORD NCLOB              
    ),
    OUT O_TABLE TABLE(PHOTOID NVARCHAR(128),
                    USERID NVARCHAR(128),
                    PHOTOTYPE NVARCHAR(128),
                    CUDKEY NVARCHAR(1)                  
    )
    
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 

AS
BEGIN

    DECLARE v_cnt BIGINT;

    SELECT COUNT(*)
    INTO   v_cnt
    FROM   :I_TABLE
    ;

    O_TABLE_NEW =   SELECT A.PHOTOID
                        ,A.USERID  
                        ,A.PHOTOTYPE
                        ,A.CUDKEY
                        ,A.RECORD
                FROM    :I_TABLE A
                LEFT OUTER JOIN PHOTO B
                ON A.PHOTOID = B.PHOTOID
                WHERE B.USERID IS NULL
                WITH HINT (NO_INLINE)
                ;

    O_TABLE_OLD =   SELECT  A.PHOTOID
                        ,A.USERID  
                        ,A.PHOTOTYPE
                        ,A.CUDKEY
                        ,A.RECORD
                FROM    :I_TABLE A
                INNER JOIN PHOTO B
                ON A.PHOTOID = B.PHOTOID     
                WITH HINT (NO_INLINE)
                ;

    INSERT INTO PHOTO(PHOTOID,USERID,PHOTOTYPE,CUDKEY,RECORD,CREATEDDATETIME,LASTMODIFIEDDATETIME,CREATEDBY,LASTMODIFIEDBY) 
    SELECT PHOTOID, USERID, PHOTOTYPE, CUDKEY, RECORD, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_USER, CURRENT_USER FROM :O_TABLE_NEW
    ;

	IF NOT IS_EMPTY(:O_TABLE_OLD) THEN
        MERGE INTO PHOTO A USING :O_TABLE_OLD B 
            ON A.PHOTOID = B.PHOTOID    
        WHEN MATCHED THEN UPDATE SET A.USERID = B.USERID, A.PHOTOTYPE = B.PHOTOTYPE, A.RECORD = B.RECORD, A.CUDKEY = B.CUDKEY, A.LASTMODIFIEDDATETIME = CURRENT_TIMESTAMP, A.LASTMODIFIEDBY = CURRENT_USER
        ;
    END IF;

    O_TABLE =  SELECT  PHOTOID
                    ,USERID  
                    ,PHOTOTYPE
                    ,CUDKEY
                FROM    :O_TABLE_OLD
               UNION ALL
               SELECT  PHOTOID
                    ,USERID  
                    ,PHOTOTYPE
                    ,CUDKEY
                FROM    :O_TABLE_NEW 
            ;                
END