PROCEDURE FOJOBCODE_SAVE_PROC (
    IN  I_TABLE TABLE(CUST_INTEGRATIONKEY NVARCHAR(128),
                     STARTDATE NVARCHAR(25),
                     EXTERNALCODE NVARCHAR(128),
                     CUDKEY NVARCHAR(1),
                     RECORD NCLOB              
    ),
    OUT O_TABLE TABLE(CUST_INTEGRATIONKEY NVARCHAR(128),
                     STARTDATE NVARCHAR(25),
                     EXTERNALCODE NVARCHAR(128),
                     CUDKEY NVARCHAR(1)             
    )
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 

AS
BEGIN

    DECLARE v_cnt BIGINT;

    SELECT COUNT(*)
    INTO   v_cnt
    FROM   :I_TABLE
    ;

    O_TABLE_NEW =   SELECT  A.CUST_INTEGRATIONKEY
                        ,A.STARTDATE
                        ,A.EXTERNALCODE
                        ,A.CUDKEY
                        ,A.RECORD
                FROM    :I_TABLE A
                LEFT OUTER JOIN FOJOBCODE B
                ON A.CUST_INTEGRATIONKEY = B.CUST_INTEGRATIONKEY
                WHERE B.CUST_INTEGRATIONKEY IS NULL
                WITH HINT (NO_INLINE)
                ;

    O_TABLE_OLD =   SELECT  A.CUST_INTEGRATIONKEY
                        ,A.STARTDATE
                        ,A.EXTERNALCODE
                        ,A.CUDKEY
                        ,A.RECORD
                FROM    :I_TABLE A
                INNER JOIN FOJOBCODE B
                ON A.CUST_INTEGRATIONKEY = B.CUST_INTEGRATIONKEY
                WITH HINT (NO_INLINE)
                ;

    INSERT INTO FOJOBCODE(CUST_INTEGRATIONKEY,STARTDATE,EXTERNALCODE,CUDKEY,RECORD,CREATEDDATETIME,LASTMODIFIEDDATETIME,CREATEDBY,LASTMODIFIEDBY)
    SELECT CUST_INTEGRATIONKEY, STARTDATE, EXTERNALCODE, CUDKEY, RECORD, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_USER, CURRENT_USER FROM :O_TABLE_NEW
    ;

	IF NOT IS_EMPTY(:O_TABLE_OLD) THEN
        MERGE INTO FOJOBCODE A USING :O_TABLE_OLD B 
            ON A.CUST_INTEGRATIONKEY = B.CUST_INTEGRATIONKEY
        WHEN MATCHED THEN UPDATE SET A.STARTDATE = B.STARTDATE, A.EXTERNALCODE = B.EXTERNALCODE, A.RECORD = B.RECORD, A.CUDKEY = B.CUDKEY, A.LASTMODIFIEDDATETIME = CURRENT_TIMESTAMP, A.LASTMODIFIEDBY = CURRENT_USER
        ;
    END IF;

    O_TABLE =  SELECT  CUST_INTEGRATIONKEY
                        ,STARTDATE
                        ,EXTERNALCODE
                        ,CUDKEY    
                FROM    :O_TABLE_OLD
               UNION ALL
               SELECT  CUST_INTEGRATIONKEY
                        ,STARTDATE
                        ,EXTERNALCODE
                        ,CUDKEY   
                FROM    :O_TABLE_NEW 
            ;                
END